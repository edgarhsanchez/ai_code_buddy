name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: [self-hosted, macOS, ARM64]
    strategy:
      matrix:
        rust: [stable, beta]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      shell: bash
      run: |
        if [ "${{ matrix.rust }}" = "beta" ]; then
          rustup toolchain install beta
          rustup default beta
        else
          rustup default stable
        fi

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/cache
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          target
        key: ${{ runner.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run tests
      shell: bash
      run: |
        echo "Current directory: $(pwd)"
        echo "Rust version: $(rustc --version)"
        cargo test --verbose

    - name: Check formatting
      shell: bash
      run: cargo fmt -- --check
      if: matrix.rust == 'stable'

    - name: Run clippy
      shell: bash
      run: cargo clippy -- -D warnings
      if: matrix.rust == 'stable'

  build:
    name: Build
    runs-on: [self-hosted, macOS, ARM64]
    needs: test
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/cache
          ~/.cargo/registry/index
          ~/.cargo/registry/cache
          ~/.cargo/git/db
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build binary
      shell: bash
      run: |
        export RUSTFLAGS="-C target-feature=+aes,+sha2,+neon"
        cargo build --release --target ${{ matrix.target }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ai_code_buddy-${{ matrix.target }}
        path: |
          target/${{ matrix.target }}/release/ai_code_buddy
