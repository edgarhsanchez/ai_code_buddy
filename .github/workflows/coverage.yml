name: Code Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  coverage:
    name: Generate Coverage Report
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: llvm-tools-preview

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev pkg-config

    - name: Run tests with coverage
      run: |
        cd "/home/runner/work/ai_code_buddy/ai_code_buddy"
        cargo tarpaulin --verbose --timeout 120 --out Json --out Html --no-default-features

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./tarpaulin-report.json
        fail_ci_if_error: false
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Archive coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          tarpaulin-report.html
          tarpaulin-report.json
          target/tarpaulin/
        retention-days: 30

    - name: Coverage Summary
      run: |
        if [ -f "tarpaulin-report.json" ]; then
          echo "Coverage report generated successfully"
          # Extract coverage percentage from the JSON report
          COVERAGE=$(grep -o '"coverage":[0-9.]*' tarpaulin-report.json | cut -d':' -f2 | head -1)
          echo "Current coverage: ${COVERAGE}%"
          
          # Set coverage badge color based on percentage
          if (( $(echo "$COVERAGE >= 80" | bc -l) )); then
            COLOR="brightgreen"
          elif (( $(echo "$COVERAGE >= 60" | bc -l) )); then
            COLOR="yellow"
          elif (( $(echo "$COVERAGE >= 40" | bc -l) )); then
            COLOR="orange"
          else
            COLOR="red"
          fi
          
          echo "Coverage badge color: $COLOR"
          echo "COVERAGE_PERCENT=$COVERAGE" >> $GITHUB_ENV
          echo "BADGE_COLOR=$COLOR" >> $GITHUB_ENV
        else
          echo "Coverage report not found"
        fi

    - name: Comment PR with coverage
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('tarpaulin-report.json')) {
            const coverage = process.env.COVERAGE_PERCENT || 'unknown';
            const color = process.env.BADGE_COLOR || 'red';
            
            const comment = `## 📊 Code Coverage Report
            
            **Current Coverage**: \`${coverage}%\`
            
            ![Coverage](https://img.shields.io/badge/coverage-${coverage}%25-${color}.svg)
            
            📁 **Detailed Report**: Check the artifacts for the full HTML coverage report.
            
            > Coverage data generated by [cargo-tarpaulin](https://github.com/xd009642/tarpaulin)`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }
