name: Security Audit

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  # Ensure cargo uses the correct workspace path
  CARGO_HOME: ${{ github.workspace }}/.cargo

jobs:
  security_audit:
    name: Security Audit
    runs-on: [self-hosted, macOS, ARM64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install cargo-audit
      shell: bash
      working-directory: ${{ github.workspace }}
      run: |
        echo "Installing cargo-audit in: $(pwd)"
        cargo install cargo-audit

    - name: Run security audit
      shell: bash
      working-directory: ${{ github.workspace }}
      run: |
        echo "Current directory: $(pwd)"
        echo "Running security audit with ignored vulnerabilities..."
        # TEMPORARY: Ignore known vulnerabilities while working on resolution
        # RUSTSEC-2020-0071: time 0.1.45 vulnerability from kalosm dependency chain
        # RUSTSEC-2024-0436: paste crate unmaintained (functionally stable)
        # RUSTSEC-2024-0375: atty unmaintained (from kalosm sound dependency)
        # RUSTSEC-2021-0145: atty potential unaligned read (from kalosm sound dependency)
        # TODO: Monitor kalosm updates for dependency resolution
        cargo audit --ignore RUSTSEC-2020-0071 --ignore RUSTSEC-2024-0436 --ignore RUSTSEC-2024-0375 --ignore RUSTSEC-2021-0145

  dependency_check:
    name: Dependency Check
    runs-on: [self-hosted, macOS, ARM64]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install cargo-outdated
      run: cargo install cargo-outdated

    - name: Check for outdated dependencies
      run: |
        echo "üì¶ Checking for outdated dependencies..."
        cargo outdated || echo "‚ö†Ô∏è Some dependencies are outdated but this won't fail the build"
